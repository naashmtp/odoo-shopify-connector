<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <!-- Process Queue Jobs - Every 5 minutes -->
        <record id="ir_cron_process_queue_jobs" model="ir.cron">
            <field name="name">Shopify: Process Queue Jobs</field>
            <field name="model_id" ref="model_shopify_queue"/>
            <field name="state">code</field>
            <field name="code">model.process_queue_jobs()</field>
            <field name="interval_number">5</field>
            <field name="interval_type">minutes</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Sync Products - Daily at 2 AM -->
        <record id="ir_cron_sync_products" model="ir.cron">
            <field name="name">Shopify: Sync Products</field>
            <field name="model_id" ref="model_shopify_instance"/>
            <field name="state">code</field>
            <field name="code">
instances = model.search([('is_active', '=', True), ('auto_import_products', '=', True)])
for instance in instances:
    instance.import_shopify_products()
            </field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=1)).replace(hour=2, minute=0, second=0)"/>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Sync Orders - Every hour -->
        <record id="ir_cron_sync_orders" model="ir.cron">
            <field name="name">Shopify: Sync Orders</field>
            <field name="model_id" ref="model_shopify_instance"/>
            <field name="state">code</field>
            <field name="code">
instances = model.search([('is_active', '=', True), ('auto_import_orders', '=', True)])
for instance in instances:
    instance.import_shopify_orders()
            </field>
            <field name="interval_number">1</field>
            <field name="interval_type">hours</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Sync Customers - Daily at 3 AM -->
        <record id="ir_cron_sync_customers" model="ir.cron">
            <field name="name">Shopify: Sync Customers</field>
            <field name="model_id" ref="model_shopify_instance"/>
            <field name="state">code</field>
            <field name="code">
instances = model.search([('is_active', '=', True), ('auto_import_customers', '=', True)])
for instance in instances:
    instance.import_shopify_customers()
            </field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=1)).replace(hour=3, minute=0, second=0)"/>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Sync Stock - Every 30 minutes -->
        <record id="ir_cron_sync_stock" model="ir.cron">
            <field name="name">Shopify: Sync Stock</field>
            <field name="model_id" ref="model_shopify_instance"/>
            <field name="state">code</field>
            <field name="code">
instances = model.search([('is_active', '=', True), ('auto_sync_stock', '=', True)])
for instance in instances:
    products = env['shopify.product'].search([('instance_id', '=', instance.id)])
    for product in products:
        product.sync_stock_levels()
            </field>
            <field name="interval_number">30</field>
            <field name="interval_type">minutes</field>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Cleanup Old Logs - Weekly Sunday at 1 AM -->
        <record id="ir_cron_cleanup_logs" model="ir.cron">
            <field name="name">Shopify: Cleanup Old Logs</field>
            <field name="model_id" ref="model_shopify_log"/>
            <field name="state">code</field>
            <field name="code">model.cleanup_old_logs(90)</field>
            <field name="interval_number">7</field>
            <field name="interval_type">days</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=(6-DateTime.now().weekday())%7)).replace(hour=1, minute=0, second=0)"/>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Cleanup Old Queue Jobs - Weekly Sunday at 2 AM -->
        <record id="ir_cron_cleanup_queue_jobs" model="ir.cron">
            <field name="name">Shopify: Cleanup Old Queue Jobs</field>
            <field name="model_id" ref="model_shopify_queue"/>
            <field name="state">code</field>
            <field name="code">model.cleanup_old_jobs(30)</field>
            <field name="interval_number">7</field>
            <field name="interval_type">days</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=(6-DateTime.now().weekday())%7)).replace(hour=2, minute=0, second=0)"/>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

        <!-- Send Error Notifications - Daily at 9 AM -->
        <record id="ir_cron_error_notifications" model="ir.cron">
            <field name="name">Shopify: Send Error Notifications</field>
            <field name="model_id" ref="model_shopify_log"/>
            <field name="state">code</field>
            <field name="code">model.send_error_notifications(threshold=10)</field>
            <field name="interval_number">1</field>
            <field name="interval_type">days</field>
            <field name="nextcall" eval="(DateTime.now() + timedelta(days=1)).replace(hour=9, minute=0, second=0)"/>
            <field name="numbercall">-1</field>
            <field name="doall" eval="False"/>
            <field name="active" eval="True"/>
        </record>

    </data>
</odoo>